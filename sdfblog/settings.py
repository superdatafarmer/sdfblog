"""
Django settings for sdfblog project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
from pathlib import Path

# 从环境变量获取密钥
SDFBLOG_SECRET_KEY = os.getenv('SDFBLOG_SECRET_KEY')
SDFBLOG_DEBUG = os.getenv('SDFBLOG_DEBUG')
SDFBLOG_MYSQL_USER = os.getenv('SDFBLOG_MYSQL_USER')
SDFBLOG_MYSQL_PWD = os.getenv('SDFBLOG_MYSQL_PWD')
SDFBLOG_EMAIL_HOST_USER = os.getenv('SDFBLOG_EMAIL_HOST_USER')
SDFBLOG_EMAIL_HOST_PWD = os.getenv('SDFBLOG_EMAIL_HOST_PWD')

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = SDFBLOG_SECRET_KEY

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = SDFBLOG_DEBUG == 'true'

ALLOWED_HOSTS = ['*']


# Application definition
AUTH_USER_MODEL = 'oauth.Ouser'  # 绑定用户应用
INSTALLED_APPS = [
    "simpleui",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "corsheaders",
    "mdeditor",  # markdown编辑器
    "oauth",
    "blog",
    "comment",
]


# 跨域问题解决 https://blog.csdn.net/lonelysnowman/article/details/128086205?spm=1001.2101.3001.6650.3&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-3-128086205-blog-124376513.235%5Ev40%5Epc_relevant_3m_sort_dl_base3&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-3-128086205-blog-124376513.235%5Ev40%5Epc_relevant_3m_sort_dl_base3&utm_relevant_index=6
# 前端用jsonp
# 后端：
#     1.安装pip install django-cors-headers
#     2.在settings添加应用'corsheaders',
#         在中间件添加位置
#             'django.middleware.security.SecurityMiddleware',
#             'django.contrib.sessions.middleware.SessionMiddleware',
#             # 增加跨域请求的中间件，必需在这两个后面，在CommonMiddleware前面
#             'corsheaders.middleware.CorsMiddleware',
#             'django.middleware.common.CommonMiddleware',
#         添加白名单
#             CORS_ORIGIN_WHITELIST = [
#                     # 只有localhost:8000才可以跨域访问
#                     'https://localhost:8080',
#                     'https://127.0.0.1:8080',
#                     # 所有域名都可以跨域访问可以这样设置
#                     'https://*',
#                     ]
#             #所有域名都可以跨域访问，也可以这样设置
#             # CORS_ORIGIN_ALLOW_ALL = True
#             # CORS_ALLOW_CREDENTIALS = True
MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    'corsheaders.middleware.CorsMiddleware', # 增加跨域请求的中间件，必需在SessionMiddleware后面，在CommonMiddleware前面
    'django.middleware.common.CommonMiddleware',
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "sdfblog.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / 'templates'],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "sdfblog.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    # "default": {
    #     "ENGINE": "django.db.backends.sqlite3",
    #     "NAME": BASE_DIR / "db.sqlite3",
    # }
    'default': {
        'ENGINE':'django.db.backends.mysql',
        'HOST': 'localhost',
        'PORT': '3306',
        'NAME':'sdfblog',
        'USER':SDFBLOG_MYSQL_USER,
        'PASSWORD':SDFBLOG_MYSQL_PWD,
        'OPTIONS': {
        	"init_command": "SET foreign_key_checks = 0;",
            'charset': 'utf8mb4',
            'use_unicode': True,
        },
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",},
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/
LANGUAGE_CODE = 'zh-hans'
TIME_ZONE = 'Asia/Shanghai'
USE_I18N = True
USE_L10N = True
USE_TZ = False  # True 会报错  Database returned an invalid datetime value. Are time zone definitions for your database installed?


# 媒体文件
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/
STATIC_URL = "static/"
STATICFILES_DIRS = [
    BASE_DIR /'static'
]
STATIC_ROOT = BASE_DIR /'static_collectd'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


# 邮件服务器
EMAIL_HOST = 'smtp.163.com'  # SMTP服务器
EMAIL_HOST_USER = SDFBLOG_EMAIL_HOST_USER  # 邮箱名
EMAIL_HOST_PASSWORD = SDFBLOG_EMAIL_HOST_PWD  # 邮箱密码
EMAIL_PORT = 25  # 发送邮件的端口
EMAIL_USE_TLS = True  # 是否使用 TLS
DEFAULT_FROM_EMAIL = SDFBLOG_EMAIL_HOST_USER  # 默认的发件人
EMAIL_SUBJECT_PREFIX = '[数据民工的博客，可以加vx]'

# 缓存设置
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.db.DatabaseCache',
        'LOCATION': 'my_cache_table',
    }
}

X_FRAME_OPTIONS = 'SAMEORIGIN'

# 在 setting.py 末尾添加以下设置
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_HEADERS = ('*')

# The Cross-Origin-Opener-Policy header has been ignored, because the URL's origin was untrustworthy. It was defined either in the final response or a redirect.
SECURE_CROSS_ORIGIN_OPENER_POLICY="None"